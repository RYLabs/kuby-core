(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{71:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return l}));var n=r(2),a=r(6),o=(r(0),r(92)),i={id:"tls-certificates",title:"TLS Certificates",sidebar_label:"TLS Certificates",slug:"/tls-certificates"},s={unversionedId:"tls-certificates",id:"tls-certificates",isDocsHomePage:!1,title:"TLS Certificates",description:"Kuby uses cert-manager to automatically request and install TLS certificates on your behalf. Behind the scenes, cert-manager uses Let's Encrypt, a non-profit certificate authority trusted by all the major browsers. You don't need an account to use Let's Encrypt, but you do need an email address. By default, Kuby uses the email address you provided as part of your Docker registry credentials. A certificate will be issued for the hostname configured for your Rails app. Note that the certificate request and installation process can sometimes take a few minutes or even a few hours depending on a number of factors. For example, if DNS hasn't propagated fully, Let's Encrypt may not be able to make requests to your app and therefore will not be able to verify you own the domain name. In most cases, you just need to wait.",source:"@site/docs/tls_certificates.md",slug:"/tls-certificates",permalink:"/docs/tls-certificates",editUrl:"https://github.com/getkuby/kuby-core/edit/master/docs/docs/tls_certificates.md",version:"current",sidebar_label:"TLS Certificates",sidebar:"sidebar",previous:{title:"Managing Data Stores",permalink:"/docs/data-stores"},next:{title:"Creating Your Own Plugins",permalink:"/docs/creating-plugins"}},c=[],u={rightToc:c};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Kuby uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jetstack/cert-manager"}),"cert-manager")," to automatically request and install TLS certificates on your behalf. Behind the scenes, cert-manager uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://letsencrypt.org/"}),"Let's Encrypt"),", a non-profit certificate authority trusted by all the major browsers. You don't need an account to use Let's Encrypt, but you do need an email address. By default, Kuby uses the email address you provided as part of your Docker registry credentials. A certificate will be issued for the hostname configured for your Rails app. Note that the certificate request and installation process can sometimes take a few minutes or even a few hours depending on a number of factors. For example, if DNS hasn't propagated fully, Let's Encrypt may not be able to make requests to your app and therefore will not be able to verify you own the domain name. In most cases, you just need to wait."))}l.isMDXComponent=!0},92:function(e,t,r){"use strict";r.d(t,"a",(function(){return f})),r.d(t,"b",(function(){return y}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},f=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=n,y=f["".concat(i,".").concat(d)]||f[d]||p[d]||o;return r?a.a.createElement(y,s(s({ref:t},u),{},{components:r})):a.a.createElement(y,s({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);