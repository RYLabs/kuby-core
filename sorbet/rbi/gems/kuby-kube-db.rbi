# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/kuby-kube-db/all/kuby-kube-db.rbi
#
# kuby-kube-db-0.6.0

module Kuby::KubeDB::Entrypoint
  def backup_schedule_spec(&block); end
  def dormant_database(&block); end
  def dormant_database_list(&block); end
  def dormant_database_spec(&block); end
  def dormant_database_status(&block); end
  def elasticsearch(&block); end
  def elasticsearch_cluster_topology(&block); end
  def elasticsearch_list(&block); end
  def elasticsearch_node(&block); end
  def elasticsearch_spec(&block); end
  def elasticsearch_status(&block); end
  def etcd(&block); end
  def etcd_list(&block); end
  def etcd_spec(&block); end
  def etcd_status(&block); end
  def init_spec(&block); end
  def leader_election_config(&block); end
  def member_secret(&block); end
  def memcached(&block); end
  def memcached_list(&block); end
  def memcached_spec(&block); end
  def memcached_status(&block); end
  def mongo_db(&block); end
  def mongo_db_config_node(&block); end
  def mongo_db_list(&block); end
  def mongo_db_mongos_node(&block); end
  def mongo_db_replica_set(&block); end
  def mongo_db_shard_node(&block); end
  def mongo_db_sharding_topology(&block); end
  def mongo_db_spec(&block); end
  def mongo_db_status(&block); end
  def my_sql(&block); end
  def my_sql_cluster_topology(&block); end
  def my_sql_group_spec(&block); end
  def my_sql_list(&block); end
  def my_sql_spec(&block); end
  def my_sql_status(&block); end
  def origin(&block); end
  def origin_spec(&block); end
  def postgres(&block); end
  def postgres_archiver_spec(&block); end
  def postgres_list(&block); end
  def postgres_spec(&block); end
  def postgres_status(&block); end
  def postgres_wal_source_spec(&block); end
  def recovery_target(&block); end
  def redis(&block); end
  def redis_cluster_spec(&block); end
  def redis_list(&block); end
  def redis_spec(&block); end
  def redis_status(&block); end
  def script_source_spec(&block); end
  def snapshot(&block); end
  def snapshot_list(&block); end
  def snapshot_source_spec(&block); end
  def snapshot_spec(&block); end
  def snapshot_status(&block); end
  def tls_policy(&block); end
end
module Kuby
end
module Kuby::KubeDB
  extend Kuby::KubeDB::Entrypoint
end
class Kuby::KubeDB::KubeDBError < StandardError
end
class Kuby::KubeDB::OperatorDeployError < Kuby::KubeDB::KubeDBError
end
class Kuby::KubeDB::APIResourcesError < Kuby::KubeDB::KubeDBError
end
class Kuby::KubeDB::Plugin < Kuby::Plugin
  def catalog_deployed?; end
  def find_operator_rs(depl); end
  def helm_cli; end
  def install_catalog; end
  def install_operator; end
  def kubernetes_cli; end
  def operator_deployed?; end
  def operator_deployment; end
  def operator_ready?; end
  def provider; end
  def rs_ready?(rs); end
  def setup; end
  def upgrade_catalog; end
  def upgrade_operator; end
  def wait_for_api_resources; end
  def wait_for_operator; end
end
